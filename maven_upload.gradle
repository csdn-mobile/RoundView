apply plugin: 'maven'
apply plugin: 'signing'

group = GROUP
archivesBaseName = ARTIFACT_NAME
version = VERSION_NAME

uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            def ossrhUsername = getPropertyFromLocalProperties("ossrhUsername")
            def ossrhPassword = getPropertyFromLocalProperties("ossrhPassword")

            repository(url: "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            snapshotRepository(url: "https://s01.oss.sonatype.org/content/repositories/snapshots/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            pom.project {
                name POM_NAME
                packaging POM_PACKAGING
                description POM_DESCRIPTION
                url POM_URL

                scm {
                    connection POM_SCM_CONNECTION
                    developerConnection POM_SCM_DEVELOPER_CONNECTION
                    url POM_SCM_URL
                }

                licenses {
                    license {
                        name POM_LICENSE_NAME
                        url POM_LICENSE_URL
                    }
                }

                developers {
                    developer {
                        id POM_DEVELOPER_ID
                        name POM_DEVELOPER_NAME
                        email POM_DEVELOPER_EMAIL
                    }
                }
            }
        }
    }
}

def getPropertyFromLocalProperties(key) {
    File file = project.rootProject.file('local.properties');
    if (file.exists()) {
        Properties properties = new Properties()
        properties.load(file.newDataInputStream())
        return properties.getProperty(key)
    }
}

signing {
    sign configurations.archives
}